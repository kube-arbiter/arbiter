apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.executor.nameOverride }}
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      arbiter-component: {{ .Values.executor.nameOverride }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        arbiter-component: {{ .Values.executor.nameOverride }}
    spec:
      containers:
        - image: {{ .Values.executor.image.resourceTaggerPluginImage }}
          imagePullPolicy: {{ .Values.executor.image.pullPolicy }}
          name: resource-tagger
          resources:
{{ toYaml .Values.executor.resources | indent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /plugins
              name: shared-volume
        - args:
            - --leader-elect
          command:
            - /bin/executor
          image: {{ .Values.executor.image.executorImage }}
          imagePullPolicy: {{ .Values.executor.image.pullPolicy }}
          env: 
{{ toYaml .Values.executor.env | indent 12}}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: executor
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
{{ toYaml .Values.executor.resources | indent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /plugins
              name: shared-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: {{ .Values.executor.nameOverride }}
      terminationGracePeriodSeconds: 10
      volumes:
        - emptyDir: {}
          name: shared-volume